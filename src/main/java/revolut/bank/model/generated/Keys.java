/*
 * This file is generated by jOOQ.
 */
package revolut.bank.model.generated;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import revolut.bank.model.generated.tables.Account;
import revolut.bank.model.generated.tables.Organization;
import revolut.bank.model.generated.tables.Party;
import revolut.bank.model.generated.tables.PartyType;
import revolut.bank.model.generated.tables.Person;
import revolut.bank.model.generated.tables.Transfer;
import revolut.bank.model.generated.tables.records.AccountRecord;
import revolut.bank.model.generated.tables.records.OrganizationRecord;
import revolut.bank.model.generated.tables.records.PartyRecord;
import revolut.bank.model.generated.tables.records.PartyTypeRecord;
import revolut.bank.model.generated.tables.records.PersonRecord;
import revolut.bank.model.generated.tables.records.TransferRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>PUBLIC</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<OrganizationRecord, Long> IDENTITY_ORGANIZATION = Identities0.IDENTITY_ORGANIZATION;
    public static final Identity<PartyRecord, Long> IDENTITY_PARTY = Identities0.IDENTITY_PARTY;
    public static final Identity<PartyTypeRecord, Long> IDENTITY_PARTY_TYPE = Identities0.IDENTITY_PARTY_TYPE;
    public static final Identity<PersonRecord, Long> IDENTITY_PERSON = Identities0.IDENTITY_PERSON;
    public static final Identity<TransferRecord, Long> IDENTITY_TRANSFER = Identities0.IDENTITY_TRANSFER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> CONSTRAINT_E4 = UniqueKeys0.CONSTRAINT_E4;
    public static final UniqueKey<AccountRecord> CONSTRAINT_E = UniqueKeys0.CONSTRAINT_E;
    public static final UniqueKey<OrganizationRecord> CONSTRAINT_D = UniqueKeys0.CONSTRAINT_D;
    public static final UniqueKey<PartyRecord> CONSTRAINT_4 = UniqueKeys0.CONSTRAINT_4;
    public static final UniqueKey<PartyTypeRecord> CONSTRAINT_3 = UniqueKeys0.CONSTRAINT_3;
    public static final UniqueKey<PersonRecord> CONSTRAINT_8 = UniqueKeys0.CONSTRAINT_8;
    public static final UniqueKey<TransferRecord> CONSTRAINT_7 = UniqueKeys0.CONSTRAINT_7;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountRecord, PartyRecord> ACCOUNT_FK0 = ForeignKeys0.ACCOUNT_FK0;
    public static final ForeignKey<OrganizationRecord, PartyRecord> ORGANIZATION_FK0 = ForeignKeys0.ORGANIZATION_FK0;
    public static final ForeignKey<PartyRecord, PartyTypeRecord> PARTY_FK0 = ForeignKeys0.PARTY_FK0;
    public static final ForeignKey<PersonRecord, PartyRecord> PERSON_FK0 = ForeignKeys0.PERSON_FK0;
    public static final ForeignKey<TransferRecord, AccountRecord> TRANSFER_FK0 = ForeignKeys0.TRANSFER_FK0;
    public static final ForeignKey<TransferRecord, AccountRecord> TRANSFER_FK1 = ForeignKeys0.TRANSFER_FK1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<OrganizationRecord, Long> IDENTITY_ORGANIZATION = Internal.createIdentity(Organization.ORGANIZATION, Organization.ORGANIZATION.PARTY_ID);
        public static Identity<PartyRecord, Long> IDENTITY_PARTY = Internal.createIdentity(Party.PARTY, Party.PARTY.ID);
        public static Identity<PartyTypeRecord, Long> IDENTITY_PARTY_TYPE = Internal.createIdentity(PartyType.PARTY_TYPE, PartyType.PARTY_TYPE.ID);
        public static Identity<PersonRecord, Long> IDENTITY_PERSON = Internal.createIdentity(Person.PERSON, Person.PERSON.PARTY_ID);
        public static Identity<TransferRecord, Long> IDENTITY_TRANSFER = Internal.createIdentity(Transfer.TRANSFER, Transfer.TRANSFER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountRecord> CONSTRAINT_E4 = Internal.createUniqueKey(Account.ACCOUNT, "CONSTRAINT_E4", Account.ACCOUNT.NUMBER);
        public static final UniqueKey<AccountRecord> CONSTRAINT_E = Internal.createUniqueKey(Account.ACCOUNT, "CONSTRAINT_E", Account.ACCOUNT.NUMBER);
        public static final UniqueKey<OrganizationRecord> CONSTRAINT_D = Internal.createUniqueKey(Organization.ORGANIZATION, "CONSTRAINT_D", Organization.ORGANIZATION.PARTY_ID);
        public static final UniqueKey<PartyRecord> CONSTRAINT_4 = Internal.createUniqueKey(Party.PARTY, "CONSTRAINT_4", Party.PARTY.ID);
        public static final UniqueKey<PartyTypeRecord> CONSTRAINT_3 = Internal.createUniqueKey(PartyType.PARTY_TYPE, "CONSTRAINT_3", PartyType.PARTY_TYPE.ID);
        public static final UniqueKey<PersonRecord> CONSTRAINT_8 = Internal.createUniqueKey(Person.PERSON, "CONSTRAINT_8", Person.PERSON.PARTY_ID);
        public static final UniqueKey<TransferRecord> CONSTRAINT_7 = Internal.createUniqueKey(Transfer.TRANSFER, "CONSTRAINT_7", Transfer.TRANSFER.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AccountRecord, PartyRecord> ACCOUNT_FK0 = Internal.createForeignKey(revolut.bank.model.generated.Keys.CONSTRAINT_4, Account.ACCOUNT, "ACCOUNT_FK0", Account.ACCOUNT.PARTY_ID);
        public static final ForeignKey<OrganizationRecord, PartyRecord> ORGANIZATION_FK0 = Internal.createForeignKey(revolut.bank.model.generated.Keys.CONSTRAINT_4, Organization.ORGANIZATION, "ORGANIZATION_FK0", Organization.ORGANIZATION.PARTY_ID);
        public static final ForeignKey<PartyRecord, PartyTypeRecord> PARTY_FK0 = Internal.createForeignKey(revolut.bank.model.generated.Keys.CONSTRAINT_3, Party.PARTY, "PARTY_FK0", Party.PARTY.PARTY_TYPE_ID);
        public static final ForeignKey<PersonRecord, PartyRecord> PERSON_FK0 = Internal.createForeignKey(revolut.bank.model.generated.Keys.CONSTRAINT_4, Person.PERSON, "PERSON_FK0", Person.PERSON.PARTY_ID);
        public static final ForeignKey<TransferRecord, AccountRecord> TRANSFER_FK0 = Internal.createForeignKey(revolut.bank.model.generated.Keys.CONSTRAINT_E, Transfer.TRANSFER, "TRANSFER_FK0", Transfer.TRANSFER.FROM_ACCOUNT_ID);
        public static final ForeignKey<TransferRecord, AccountRecord> TRANSFER_FK1 = Internal.createForeignKey(revolut.bank.model.generated.Keys.CONSTRAINT_E, Transfer.TRANSFER, "TRANSFER_FK1", Transfer.TRANSFER.TO_ACCOUNT_ID);
    }
}
