/*
 * This file is generated by jOOQ.
 */
package revolut.bank.model.generated;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import revolut.bank.model.generated.tables.Account;
import revolut.bank.model.generated.tables.Organization;
import revolut.bank.model.generated.tables.Party;
import revolut.bank.model.generated.tables.PartyType;
import revolut.bank.model.generated.tables.Person;
import revolut.bank.model.generated.tables.Transfer;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1962786581;

    /**
     * The reference instance of <code>PUBLIC</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>PUBLIC.ACCOUNT</code>.
     */
    public final Account ACCOUNT = revolut.bank.model.generated.tables.Account.ACCOUNT;

    /**
     * The table <code>PUBLIC.ORGANIZATION</code>.
     */
    public final Organization ORGANIZATION = revolut.bank.model.generated.tables.Organization.ORGANIZATION;

    /**
     * The table <code>PUBLIC.PARTY</code>.
     */
    public final Party PARTY = revolut.bank.model.generated.tables.Party.PARTY;

    /**
     * The table <code>PUBLIC.PARTY_TYPE</code>.
     */
    public final PartyType PARTY_TYPE = revolut.bank.model.generated.tables.PartyType.PARTY_TYPE;

    /**
     * The table <code>PUBLIC.PERSON</code>.
     */
    public final Person PERSON = revolut.bank.model.generated.tables.Person.PERSON;

    /**
     * The table <code>PUBLIC.TRANSFER</code>.
     */
    public final Transfer TRANSFER = revolut.bank.model.generated.tables.Transfer.TRANSFER;

    /**
     * No further instances allowed
     */
    private Public() {
        super("PUBLIC", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Account.ACCOUNT,
            Organization.ORGANIZATION,
            Party.PARTY,
            PartyType.PARTY_TYPE,
            Person.PERSON,
            Transfer.TRANSFER);
    }
}
